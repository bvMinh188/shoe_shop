<div id="order-message" class="alert d-none" role="alert"></div>

<div class="col-md-12">
    <h3>Thông tin đơn hàng</h3>
    <table class="table mt-4">
        <thead>
            <tr>
                <th scope="col">STT</th>
                <th scope="col">Tên khách hàng</th>
                <th scope="col">Địa chỉ</th>
                <th scope="col">Số điện thoại</th>
                <th scope="col">Giá</th>
                <th scope="col">Thời gian</th>
                <th scope="col">Trạng thái</th>
                <th scope="col">Thao tác</th>
            </tr>
        </thead>
        <tbody>
            {{#each order}}
                <tr>
                    <td>{{sum @index 1}}</td>
                    <td>{{this.userId.username}}</td>
                    <td>{{this.address}}</td>
                    <td>{{this.userId.phone}}</td>
                    <td>{{this.price}}</td>
                    <td>{{formatDate this.createdAt}}</td>
                    <td>{{this.status}}</td>
                    <td>
                        <button class="btn btn-primary btn-view-order" 
                            data-toggle="modal" 
                            data-products='{{{json this.products}}}' 
                            data-target="#detail-order-modal">
                            Xem
                        </button>
                        {{#if (eq this.status "chờ xác nhận")}}
                            <button class="btn btn-success btn-confirm" data-id="{{this._id}}">Xác nhận</button>
                            <button class="btn btn-danger cancel-order" data-id="{{this._id}}">Hủy đơn</button>
                        {{/if}}
                        {{#if (eq this.status "đang giao")}}
                            <button class="btn btn-success btn-complete" data-id="{{this._id}}">Giao thành công</button>
                        {{/if}}
                    </td>
                </tr>
            {{/each}}
        </tbody>
    </table>
</div>

<div id="order-alert" class="alert d-none" role="alert"></div>

<!-- Modal Xem Đơn Hàng -->
<div id="detail-order-modal" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Chi tiết đơn hàng</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div id="order-products" class="row"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal Hủy Đơn -->
<div id="cancelOrderModal" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Xác nhận hủy đơn</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Bạn có chắc chắn muốn hủy đơn hàng này không?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
        <button id="confirmCancelOrder" type="button" class="btn btn-danger">Xác nhận hủy</button>
      </div>
    </div>
  </div>
</div>



<script>
document.addEventListener("DOMContentLoaded", function () {
    const orderMessage = document.getElementById("order-message");
    let selectedOrderId = null; // Lưu ID đơn hàng cần hủy

    function showAlert(message, type = "success") {
        localStorage.setItem("orderMessage", JSON.stringify({ message, type }));
        renderAlert();
    }

    function renderAlert() {
        const storedMessage = localStorage.getItem("orderMessage");
        if (storedMessage) {
            const { message, type } = JSON.parse(storedMessage);
            orderMessage.textContent = message;
            orderMessage.className = `alert alert-${type}`;
            orderMessage.classList.remove("d-none");

            setTimeout(() => {
                orderMessage.classList.add("d-none");
                localStorage.removeItem("orderMessage");
            }, 2000);
        }
    }

    renderAlert();

    document.querySelectorAll(".btn-view-order").forEach(button => {
        button.addEventListener("click", function () {
            const products = JSON.parse(this.dataset.products);
            const orderProducts = document.getElementById("order-products");
            orderProducts.innerHTML = "";
            products.forEach(product => {
                orderProducts.innerHTML += `
                    <div class="col-md-4">
                        <img src="${product.image}" class="card-img-top" alt="${product.name}">
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">${product.name}</h5>
                                <p class="card-text">Size: ${product.size} - Số lượng: ${product.quantity}</p>
                            </div>
                        </div>
                    </div>
                `;
            });
        });
    });

    document.querySelectorAll(".btn-confirm").forEach(button => {
        button.addEventListener("click", function () {
            fetch(`/admin/transaction/${this.dataset.id}/confirm`, { method: "PATCH" })
                .then(response => response.json())
                .then(data => {
                    if (data.message === "success") {
                        showAlert("Đơn hàng đã được xác nhận.");
                        setTimeout(() => location.reload(), 1000);
                    }
                });
        });
    });

    document.querySelectorAll(".btn-complete").forEach(button => {
        button.addEventListener("click", function () {
            fetch(`/admin/transaction/${this.dataset.id}/complete`, { method: "PATCH" })
                .then(response => response.json())
                .then(data => {
                    if (data.message === "success") {
                        showAlert("Đơn hàng đã được giao thành công.");
                        setTimeout(() => location.reload(), 1000);
                    }
                });
        });
    });

    const cancelOrderModal = new bootstrap.Modal(document.getElementById("cancelOrderModal"));

    // Khi bấm "Hủy đơn", mở modal
    document.querySelectorAll(".cancel-order").forEach(button => {
        button.addEventListener("click", function () {
            selectedOrderId = this.dataset.id;
            cancelOrderModal.show();
        });
    });

    // Khi bấm "Xác nhận hủy", gửi request DELETE
    document.getElementById("confirmCancelOrder").addEventListener("click", function () {
        if (selectedOrderId) {
            fetch(`/admin/transaction/${selectedOrderId}`, { method: "DELETE" })
                .then(response => response.json())
                .then(data => {
                    if (data.message === "success") {
                        showAlert("Đơn hàng đã bị hủy.", "danger");
                        setTimeout(() => location.reload(), 1000);
                    }
                });

            cancelOrderModal.hide(); // Đóng modal đúng cách
        }
    });
});
</script>

